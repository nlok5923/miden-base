# CONSTANTS
# =================================================================================================

# The maximum number of assets that can be stored in a single note
const.MAX_ASSETS_PER_NOTE=255

# The maximum number of notes that can be consumed in a single transaction.
const.MAX_NUM_CONSUMED_NOTES=1023

# The size of the memory segment allocated to each note
const.NOTE_MEM_SIZE=1024

# The depth of the Merkle tree used to commit to notes produced in a block.
const.NOTE_TREE_DEPTH=20

# The maximum number of notes that can be created in a single transaction (2^12)
const.MAX_NUM_CREATED_NOTES=4096

# Specifies a modulus used to asses if an account seed digest has the required number of trailing
# zeros for a regular account (2^23).
const.REGULAR_ACCOUNT_SEED_DIGEST_MODULUS=8388608

# Specifies a modulus used to asses if an account seed digest has the required number of trailing
# zeros for a faucet account (2^31).
const.FAUCET_ACCOUNT_SEED_DIGEST_MODULUS=2147483648

# PROCEDURES
# =================================================================================================

#! Returns the max allowed number of assets per note.
#!
#! Stack: []
#! Output: [max_assets_per_note]
#!
#! - max_assets_per_note is the max assets per note.
export.get_max_assets_per_note
    push.MAX_ASSETS_PER_NOTE
end

#! Returns the max allow number of consumed notes.
#!
#! Stack: []
#! Output: [max_num_consumed_notes]
#!
#! - max_num_consumed_notes is the max number of consumed notes.
export.get_max_num_consumed_notes
    push.MAX_NUM_CONSUMED_NOTES
end

#! Returns the size of the memory segment allocated to each note.
#!
#! Stack: []
#! Output: [note_mem_size]
#!
#! - note_mem_size is the size of the memory segment allocated to each note.
export.get_note_mem_size
    push.NOTE_MEM_SIZE
end

#! Returns the depth of the Merkle tree used to commit to notes produced in a block.
#!
#! Stack: []
#! Output: [note_tree_depth]
#!
#! - note_tree_depth is the depth of the Merkle tree used to commit to notes produced in a block.
export.get_note_tree_depth
    push.NOTE_TREE_DEPTH
end

#! Returns the max number of notes that can be created in a single transaction.
#!
#! Stack: []
#! Output: [max_num_created_notes]
#!
#! - max_num_created_notes is the max number of notes that can be created in a single transaction.
export.get_max_num_created_notes
    push.MAX_NUM_CREATED_NOTES
end

#! Returns a modulus used to asses if an account seed digest has the required number of trailing
#! zeros for a regular account (2^23).
#!
#! Stack: []
#! Output: [REGULAR_ACCOUNT_SEED_DIGEST_MODULUS]
#!
#! - REGULAR_ACCOUNT_SEED_DIGEST_MODULUS is a modulus used to asses if a seed digest has the
#!   required number of trailing zeros for a regular account.
export.get_regular_account_seed_digest_modulus
    push.REGULAR_ACCOUNT_SEED_DIGEST_MODULUS
end

#! Returns a modulus used to asses if an account seed digest has the required number of trailing
#! zeros for a faucet account (2^31).
#!
#! Stack: []
#! Output: [FAUCET_ACCOUNT_SEED_DIGEST_MODULUS]
#!
#! - FAUCET_ACCOUNT_SEED_DIGEST_MODULUS is a modulus used to asses if a seed digest has the
#!   required number of trailing zeros for a faucet account.
export.get_faucet_seed_digest_modulus
    push.FAUCET_ACCOUNT_SEED_DIGEST_MODULUS
end

#! Returns the root of an empty tiered sparse Merkle tree.
#!
#! Stack: []
#! Output: [EMPTY_SMT_ROOT]
#!
#! - EMPTY_SMT_ROOT is the root of an empty tiered sparse Merkle tree.
export.get_empty_tsmt_root
    push.15321474589252129342.17373224439259377994.15071539326562317628.3312677166725950353
end
